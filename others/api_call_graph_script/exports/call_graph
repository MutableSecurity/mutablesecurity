digraph "Call Graph" {
	graph [nodesep=3,
		ranksep=3
	];
	subgraph cluster_cli_commands {
		graph [color=red,
			label="CLI Commands"
		];
		node [color=red,
			shape=box,
			style=filled
		];
		init	[color=red,
			label=init,
			shape=box,
			style=filled];
		install	[color=red,
			label=install,
			shape=box,
			style=filled];
		get_information	[color=red,
			label=get_information,
			shape=box,
			style=filled];
		set_information	[color=red,
			label=set_information,
			shape=box,
			style=filled];
		test	[color=red,
			label=test,
			shape=box,
			style=filled];
		get_logs	[color=red,
			label=get_logs,
			shape=box,
			style=filled];
		update	[color=red,
			label=update,
			shape=box,
			style=filled];
		uninstall	[color=red,
			label=uninstall,
			shape=box,
			style=filled];
		execute	[color=red,
			label=execute,
			shape=box,
			style=filled];
	}
	subgraph cluster_abstract_methods {
		graph [label="Abstract methods"];
		node [color=royalblue,
			shape=box,
			style=filled
		];
		_ensure_installation_state	[color=royalblue,
			label=_ensure_installation_state,
			shape=box,
			style=filled];
		_install	[color=royalblue,
			label=_install,
			shape=box,
			style=filled];
		_uninstall	[color=royalblue,
			label=_uninstall,
			shape=box,
			style=filled];
		_update	[color=royalblue,
			label=_update,
			shape=box,
			style=filled];
	}
	subgraph cluster_class_methods {
		graph [label="Concrete class methods"];
		node [color=lightslategray,
			shape=box,
			style=filled
		];
		__build_manager_result	[color=lightslategray,
			label=__build_manager_result,
			shape=box,
			style=filled];
		__load_meta	[color=lightslategray,
			label=__load_meta,
			shape=box,
			style=filled];
		__get_configuration_filename	[color=lightslategray,
			label=__get_configuration_filename,
			shape=box,
			style=filled];
		__load_current_configuration_from_file	[color=lightslategray,
			label=__load_current_configuration_from_file,
			shape=box,
			style=filled];
		__save_current_configuration_as_file	[color=lightslategray,
			label=__save_current_configuration_as_file,
			shape=box,
			style=filled];
		__get_information_from_remote	[color=lightslategray,
			label=__get_information_from_remote,
			shape=box,
			style=filled];
		__get_home_path	[color=lightslategray,
			label=__get_home_path,
			shape=box,
			style=filled];
		__create_home_path	[color=lightslategray,
			label=__create_home_path,
			shape=box,
			style=filled];
		__remove_home_path	[color=lightslategray,
			label=__remove_home_path,
			shape=box,
			style=filled];
	}
	subgraph cluster_managers_methods {
		graph [label="Managers methods"];
		node [color=lightgray,
			shape=ellipse,
			style=filled
		];
		"INFORMATION_MANAGER.populate"	[color=lightgray,
			label="INFORMATION_MANAGER.populate",
			shape=ellipse,
			style=filled];
		"ACTIONS_MANAGER.execute"	[color=lightgray,
			label="ACTIONS_MANAGER.execute",
			shape=ellipse,
			style=filled];
		"LOGS_MANAGER.get_content"	[color=lightgray,
			label="LOGS_MANAGER.get_content",
			shape=ellipse,
			style=filled];
		"INFORMATION_MANAGER.set_default_values_locally"	[color=lightgray,
			label="INFORMATION_MANAGER.set_default_values_locally",
			shape=ellipse,
			style=filled];
		"TESTS_MANAGER.test"	[color=lightgray,
			label="TESTS_MANAGER.test",
			shape=ellipse,
			style=filled];
		"INFORMATION_MANAGER.get"	[color=lightgray,
			label="INFORMATION_MANAGER.get",
			shape=ellipse,
			style=filled];
		"INFORMATION_MANAGER.represent_as_dict"	[color=lightgray,
			label="INFORMATION_MANAGER.represent_as_dict",
			shape=ellipse,
			style=filled];
		"INFORMATION_MANAGER.set"	[color=lightgray,
			label="INFORMATION_MANAGER.set",
			shape=ellipse,
			style=filled];
	}
	init -> __save_current_configuration_as_file;
	init -> "INFORMATION_MANAGER.set_default_values_locally"	[minlen=1];
	install -> _ensure_installation_state;
	install -> _install	[minlen=1];
	install -> __load_current_configuration_from_file;
	install -> __create_home_path;
	install -> "TESTS_MANAGER.test";
	get_information -> _ensure_installation_state;
	get_information -> __build_manager_result;
	get_information -> __save_current_configuration_as_file;
	get_information -> "INFORMATION_MANAGER.get";
	set_information -> _ensure_installation_state;
	set_information -> __save_current_configuration_as_file;
	set_information -> __get_information_from_remote;
	set_information -> "INFORMATION_MANAGER.set"	[minlen=1];
	test -> _ensure_installation_state;
	test -> __build_manager_result;
	test -> __get_information_from_remote;
	test -> "TESTS_MANAGER.test";
	get_logs -> _ensure_installation_state;
	get_logs -> __build_manager_result;
	get_logs -> __get_information_from_remote;
	get_logs -> "LOGS_MANAGER.get_content"	[minlen=1];
	update -> _ensure_installation_state;
	update -> _update	[minlen=1];
	update -> __get_information_from_remote;
	uninstall -> _ensure_installation_state;
	uninstall -> _uninstall	[minlen=1];
	uninstall -> __get_information_from_remote;
	uninstall -> __remove_home_path;
	execute -> _ensure_installation_state;
	execute -> __get_information_from_remote;
	execute -> "ACTIONS_MANAGER.execute"	[minlen=1];
	_ensure_installation_state -> __load_current_configuration_from_file;
	_ensure_installation_state -> "TESTS_MANAGER.test";
	__load_current_configuration_from_file -> __get_configuration_filename;
	__load_current_configuration_from_file -> "INFORMATION_MANAGER.populate"	[minlen=1];
	__save_current_configuration_as_file -> __get_configuration_filename;
	__save_current_configuration_as_file -> "INFORMATION_MANAGER.represent_as_dict"	[minlen=1];
	__get_information_from_remote -> "INFORMATION_MANAGER.get";
	__create_home_path -> __get_home_path;
	__remove_home_path -> __get_home_path;
}
